{"version":3,"sources":["components/Post.jsx","components/PostForm.jsx","App.js","index.js","utils/DB.js"],"names":["Post","data","onDelete","className","onClick","_id","content","title","format","postDate","PostForm","onPost","useState","setContent","processing","setProcessing","onSubmit","e","preventDefault","length","includes","addPost","res","disabled","htmlFor","name","maxLength","placeholder","id","rows","onChange","target","value","App","posts","setPosts","modeDelete","setModeDelete","useEffect","refreshPosts","getPosts","reverse","handleDeletePost","deletePost","map","post","ReactDOM","render","document","getElementById","url","exports","callback","fetch","then","status","json","catch","err","console","log","method","body","JSON","stringify","mode"],"mappings":"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","file":"static/js/main.6dc4be93.chunk.js","sourcesContent":["import Moment from 'react-moment';\nimport Linkify from 'react-linkify';\n\nexport default function Post({ data, onDelete }) {\n    return (\n        <div className=\"card\" onClick={() => { onDelete(data._id) }}>\n            <div className=\"card-body\">\n                <p className=\"card-text\"><Linkify>{data.content}</Linkify></p>\n                <blockquote className=\"blockquote mb-0\">\n                    <footer className=\"blockquote-footer\">\n                        <small className=\"text-muted\">\n                            Posté le <cite title=\"Date de publication\"><Moment format=\"DD/MM à HH:mm\">{data.postDate}</Moment></cite>\n                        </small>\n                    </footer>\n                </blockquote>\n            </div>\n        </div>\n    )\n}","import { useState } from \"react\";\nimport { addPost } from '../utils/DB';\n\nexport default function PostForm({ onPost }) {\n\n    const [content, setContent] = useState(\"\");\n    const [processing, setProcessing] = useState(false);\n\n    const handleContentChange = (e) => {\n        setContent(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (content === \"\" || content.length > 300) return;\n\n        if (content.includes(\"!\")) {\n            onPost(content);\n            setContent(\"\");\n            return;\n        }\n\n        setProcessing(true);\n\n        addPost(content, (res) => {\n            if (res) {\n                onPost();\n                setContent(\"\");\n            }\n            setProcessing(false);\n        })\n    }\n\n    return (\n        <form className=\"mb-3\" onSubmit={handleSubmit}>\n            <fieldset disabled={processing}>\n                <div className=\"form-group\">\n                    <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                        <label className=\"mb-0 font-weight-bold mt-2\" htmlFor=\"post-content\">Contenu à poster | {content.length} sur 300</label>\n                        <button className=\"btn btn-success btn-sm\" disabled={content !== \"\" ? false : true}>Poster</button>\n                    </div>\n                    <textarea name=\"content\" maxLength={300} className=\"form-control\" placeholder=\"Saisissez votre post\" id=\"post-content\" rows=\"3\" onChange={handleContentChange} value={content}></textarea>\n                </div>\n            </fieldset>\n        </form>\n    )\n}","import React, { useState, useEffect } from 'react';\n\nimport { getPosts, deletePost } from './utils/DB';\n\nimport Post from './components/Post';\nimport PostForm from './components/PostForm';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n\n    const [posts, setPosts] = useState([]);\n    const [modeDelete, setModeDelete] = useState(false);\n\n    useEffect(() => {\n        refreshPosts();\n    }, []);\n\n    const refreshPosts = (content) => {\n        if (content && content === \"!delete\") {\n            setModeDelete(!modeDelete);\n            return;\n        }\n\n        getPosts((posts) => {\n            if (posts) setPosts(posts.reverse());\n        });\n    }\n\n    const handleDeletePost = (id) => {\n        if (!modeDelete) return;\n        deletePost(id, () => { refreshPosts() });\n    }\n\n    return (\n        <div className=\"container mb-5\">\n            <PostForm onPost={refreshPosts} />\n            <hr />\n            <div className={`card-columns ${modeDelete && 'delete'}`}>\n                {\n                    posts.map((post) => (<Post key={post._id} data={post} onDelete={handleDeletePost} />))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))","\nconst url = 'https://post-public.netlify.app/.netlify/functions/post';\n\nconst getPosts = (callback) => {\n    fetch(url).then(res => {\n        if (res.status === 200) return res.json();\n    })\n        .then(data => {\n            callback(data);\n        }).catch(err => {\n            callback(false);\n            console.log(err);\n        });\n}\n\nconst addPost = (content, callback) => {\n    fetch(url,\n        {\n            method: 'POST',\n            body: JSON.stringify({ content: content })\n        }\n    ).then(res => res.json())\n        .then(res => {\n            console.log(res);\n            callback(res);\n        }).catch(err => {\n            callback(false);\n            console.log(err);\n        });\n}\n\nconst deletePost = (id, callback) => {\n    fetch(url,\n        {\n            method: 'POST',\n            body: JSON.stringify({ id: id, mode: \"delete\" })\n        }\n    ).then(res => res.json())\n        .then(res => {\n            console.log(res);\n            callback(res);\n        }).catch(err => {\n            callback(false);\n            console.log(err);\n        });\n}\n\n\nexports.getPosts = getPosts;\nexports.addPost = addPost;\nexports.deletePost = deletePost;"],"sourceRoot":""}